      SUBROUTINE SGG_TTBGG(P1,ANS)
C  
C FUNCTION GENERATED BY MADGRAPH
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : g g -> t t~ g g  
C  
C Crossing   1 is g g -> t t~ g g  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NEXTERNAL,   NCOMB,     NCROSS         
      PARAMETER (NEXTERNAL=6, NCOMB= 64, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 GG_TTBGG
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL)
      LOGICAL GOODHEL(NCOMB,NCROSS)
      DATA GOODHEL/THEL*.FALSE./
      DATA NTRY/0/
      DATA (NHEL(IHEL,  1),IHEL=1,6) / -1, -1, -1, -1, -1, -1/
      DATA (NHEL(IHEL,  2),IHEL=1,6) / -1, -1, -1, -1, -1,  1/
      DATA (NHEL(IHEL,  3),IHEL=1,6) / -1, -1, -1, -1,  1, -1/
      DATA (NHEL(IHEL,  4),IHEL=1,6) / -1, -1, -1, -1,  1,  1/
      DATA (NHEL(IHEL,  5),IHEL=1,6) / -1, -1, -1,  1, -1, -1/
      DATA (NHEL(IHEL,  6),IHEL=1,6) / -1, -1, -1,  1, -1,  1/
      DATA (NHEL(IHEL,  7),IHEL=1,6) / -1, -1, -1,  1,  1, -1/
      DATA (NHEL(IHEL,  8),IHEL=1,6) / -1, -1, -1,  1,  1,  1/
      DATA (NHEL(IHEL,  9),IHEL=1,6) / -1, -1,  1, -1, -1, -1/
      DATA (NHEL(IHEL, 10),IHEL=1,6) / -1, -1,  1, -1, -1,  1/
      DATA (NHEL(IHEL, 11),IHEL=1,6) / -1, -1,  1, -1,  1, -1/
      DATA (NHEL(IHEL, 12),IHEL=1,6) / -1, -1,  1, -1,  1,  1/
      DATA (NHEL(IHEL, 13),IHEL=1,6) / -1, -1,  1,  1, -1, -1/
      DATA (NHEL(IHEL, 14),IHEL=1,6) / -1, -1,  1,  1, -1,  1/
      DATA (NHEL(IHEL, 15),IHEL=1,6) / -1, -1,  1,  1,  1, -1/
      DATA (NHEL(IHEL, 16),IHEL=1,6) / -1, -1,  1,  1,  1,  1/
      DATA (NHEL(IHEL, 17),IHEL=1,6) / -1,  1, -1, -1, -1, -1/
      DATA (NHEL(IHEL, 18),IHEL=1,6) / -1,  1, -1, -1, -1,  1/
      DATA (NHEL(IHEL, 19),IHEL=1,6) / -1,  1, -1, -1,  1, -1/
      DATA (NHEL(IHEL, 20),IHEL=1,6) / -1,  1, -1, -1,  1,  1/
      DATA (NHEL(IHEL, 21),IHEL=1,6) / -1,  1, -1,  1, -1, -1/
      DATA (NHEL(IHEL, 22),IHEL=1,6) / -1,  1, -1,  1, -1,  1/
      DATA (NHEL(IHEL, 23),IHEL=1,6) / -1,  1, -1,  1,  1, -1/
      DATA (NHEL(IHEL, 24),IHEL=1,6) / -1,  1, -1,  1,  1,  1/
      DATA (NHEL(IHEL, 25),IHEL=1,6) / -1,  1,  1, -1, -1, -1/
      DATA (NHEL(IHEL, 26),IHEL=1,6) / -1,  1,  1, -1, -1,  1/
      DATA (NHEL(IHEL, 27),IHEL=1,6) / -1,  1,  1, -1,  1, -1/
      DATA (NHEL(IHEL, 28),IHEL=1,6) / -1,  1,  1, -1,  1,  1/
      DATA (NHEL(IHEL, 29),IHEL=1,6) / -1,  1,  1,  1, -1, -1/
      DATA (NHEL(IHEL, 30),IHEL=1,6) / -1,  1,  1,  1, -1,  1/
      DATA (NHEL(IHEL, 31),IHEL=1,6) / -1,  1,  1,  1,  1, -1/
      DATA (NHEL(IHEL, 32),IHEL=1,6) / -1,  1,  1,  1,  1,  1/
      DATA (NHEL(IHEL, 33),IHEL=1,6) /  1, -1, -1, -1, -1, -1/
      DATA (NHEL(IHEL, 34),IHEL=1,6) /  1, -1, -1, -1, -1,  1/
      DATA (NHEL(IHEL, 35),IHEL=1,6) /  1, -1, -1, -1,  1, -1/
      DATA (NHEL(IHEL, 36),IHEL=1,6) /  1, -1, -1, -1,  1,  1/
      DATA (NHEL(IHEL, 37),IHEL=1,6) /  1, -1, -1,  1, -1, -1/
      DATA (NHEL(IHEL, 38),IHEL=1,6) /  1, -1, -1,  1, -1,  1/
      DATA (NHEL(IHEL, 39),IHEL=1,6) /  1, -1, -1,  1,  1, -1/
      DATA (NHEL(IHEL, 40),IHEL=1,6) /  1, -1, -1,  1,  1,  1/
      DATA (NHEL(IHEL, 41),IHEL=1,6) /  1, -1,  1, -1, -1, -1/
      DATA (NHEL(IHEL, 42),IHEL=1,6) /  1, -1,  1, -1, -1,  1/
      DATA (NHEL(IHEL, 43),IHEL=1,6) /  1, -1,  1, -1,  1, -1/
      DATA (NHEL(IHEL, 44),IHEL=1,6) /  1, -1,  1, -1,  1,  1/
      DATA (NHEL(IHEL, 45),IHEL=1,6) /  1, -1,  1,  1, -1, -1/
      DATA (NHEL(IHEL, 46),IHEL=1,6) /  1, -1,  1,  1, -1,  1/
      DATA (NHEL(IHEL, 47),IHEL=1,6) /  1, -1,  1,  1,  1, -1/
      DATA (NHEL(IHEL, 48),IHEL=1,6) /  1, -1,  1,  1,  1,  1/
      DATA (NHEL(IHEL, 49),IHEL=1,6) /  1,  1, -1, -1, -1, -1/
      DATA (NHEL(IHEL, 50),IHEL=1,6) /  1,  1, -1, -1, -1,  1/
      DATA (NHEL(IHEL, 51),IHEL=1,6) /  1,  1, -1, -1,  1, -1/
      DATA (NHEL(IHEL, 52),IHEL=1,6) /  1,  1, -1, -1,  1,  1/
      DATA (NHEL(IHEL, 53),IHEL=1,6) /  1,  1, -1,  1, -1, -1/
      DATA (NHEL(IHEL, 54),IHEL=1,6) /  1,  1, -1,  1, -1,  1/
      DATA (NHEL(IHEL, 55),IHEL=1,6) /  1,  1, -1,  1,  1, -1/
      DATA (NHEL(IHEL, 56),IHEL=1,6) /  1,  1, -1,  1,  1,  1/
      DATA (NHEL(IHEL, 57),IHEL=1,6) /  1,  1,  1, -1, -1, -1/
      DATA (NHEL(IHEL, 58),IHEL=1,6) /  1,  1,  1, -1, -1,  1/
      DATA (NHEL(IHEL, 59),IHEL=1,6) /  1,  1,  1, -1,  1, -1/
      DATA (NHEL(IHEL, 60),IHEL=1,6) /  1,  1,  1, -1,  1,  1/
      DATA (NHEL(IHEL, 61),IHEL=1,6) /  1,  1,  1,  1, -1, -1/
      DATA (NHEL(IHEL, 62),IHEL=1,6) /  1,  1,  1,  1, -1,  1/
      DATA (NHEL(IHEL, 63),IHEL=1,6) /  1,  1,  1,  1,  1, -1/
      DATA (NHEL(IHEL, 64),IHEL=1,6) /  1,  1,  1,  1,  1,  1/
      DATA (  IC(IHEL,  1),IHEL=1,6) /  1,  2,  3,  4,  5,  6/
      DATA (IDEN(IHEL),IHEL=  1,  1) / 512/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
      ANS(IPROC) = 0D0
      DO IHEL=1,NCOMB
          IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
             T=GG_TTBGG(P ,NHEL(1,IHEL),JC(1))            
             ANS(IPROC)=ANS(IPROC)+T
              IF (T .GT. 0D0 .AND. .NOT. GOODHEL(IHEL,IPROC)) THEN
                  GOODHEL(IHEL,IPROC)=.TRUE.
C             WRITE(*,*) IHEL,T
              ENDIF
          ENDIF
      ENDDO
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION GG_TTBGG(P,NHEL,IC)
C  
C FUNCTION GENERATED BY MADGRAPH
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : g g -> t t~ g g  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN,    NEXTERNAL       
      PARAMETER (NGRAPHS= 159,NEIGEN= 24,NEXTERNAL=6)   
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=  99, NCOLOR=  24) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      INCLUDE 'coupl.inc'
C  
C COLOR DATA
C  
      DATA Denom(1  )/           54/                                       
      DATA (CF(i,1  ),i=1  ,6  ) /   512,    8,  -64,   80,    8,  -10/    
      DATA (CF(i,1  ),i=7  ,12 ) /    -1,  -64,  -64,    8,   -1,  -10/    
      DATA (CF(i,1  ),i=13 ,18 ) /    62,  -28,   -1,  -10,   80,    8/    
      DATA (CF(i,1  ),i=19 ,24 ) /   -10,   62,   71,   62,   -1,    8/    
C               T[3,4,2,5,1,6]                                             
      DATA Denom(2  )/           54/                                       
      DATA (CF(i,2  ),i=1  ,6  ) /     8,  512,   80,  -64,    8,    8/    
      DATA (CF(i,2  ),i=7  ,12 ) /    -1,  -64,   -1,  -10,   62,   71/    
      DATA (CF(i,2  ),i=13 ,18 ) /    -1,  -10,   62,  -28,   -1,  -10/    
      DATA (CF(i,2  ),i=19 ,24 ) /   -10,   62,    8,   80,  -64,    8/    
C               T[3,4,2,1,6,5]                                             
      DATA Denom(3  )/           54/                                       
      DATA (CF(i,3  ),i=1  ,6  ) /   -64,   80,  512,    8,  -64,   -1/    
      DATA (CF(i,3  ),i=7  ,12 ) /     8,    8,    8,  -64,    8,   80/    
      DATA (CF(i,3  ),i=13 ,18 ) /   -28,   62,  -10,   -1,  -10,   -1/    
      DATA (CF(i,3  ),i=19 ,24 ) /    62,  -10,   62,   71,  -10,   -1/    
C               T[3,4,2,5,6,1]                                             
      DATA Denom(4  )/           54/                                       
      DATA (CF(i,4  ),i=1  ,6  ) /    80,  -64,    8,  512,  -64,  -64/    
      DATA (CF(i,4  ),i=7  ,12 ) /     8,    8,  -10,   -1,  -10,   -1/    
      DATA (CF(i,4  ),i=13 ,18 ) /   -10,   -1,  -28,   62,   71,   62/    
      DATA (CF(i,4  ),i=19 ,24 ) /    62,  -10,   80,    8,    8,   -1/    
C               T[3,4,2,6,1,5]                                             
      DATA Denom(5  )/           54/                                       
      DATA (CF(i,5  ),i=1  ,6  ) /     8,    8,  -64,  -64,  512,    8/    
      DATA (CF(i,5  ),i=7  ,12 ) /   -64,   80,   -1,    8,   80,    8/    
      DATA (CF(i,5  ),i=13 ,18 ) /    62,  -10,   62,  -10,   62,   71/    
      DATA (CF(i,5  ),i=19 ,24 ) /   -28,   -1,  -10,   -1,   -1,  -10/    
C               T[3,4,2,6,5,1]                                             
      DATA Denom(6  )/           54/                                       
      DATA (CF(i,6  ),i=1  ,6  ) /   -10,    8,   -1,  -64,    8,  512/    
      DATA (CF(i,6  ),i=7  ,12 ) /   -64,   -1,   62,  -10,   -1,    8/    
      DATA (CF(i,6  ),i=13 ,18 ) /    -1,    8,   62,  -10,   62,  -28/    
      DATA (CF(i,6  ),i=19 ,24 ) /    71,   80,    8,  -64,   80,  -10/    
C               T[3,4,6,2,1,5]                                             
      DATA Denom(7  )/           54/                                       
      DATA (CF(i,7  ),i=1  ,6  ) /    -1,   -1,    8,    8,  -64,  -64/    
      DATA (CF(i,7  ),i=7  ,12 ) /   512,  -10,  -10,   80,    8,  -64/    
      DATA (CF(i,7  ),i=13 ,18 ) /   -10,   80,   71,   -1,  -28,   62/    
      DATA (CF(i,7  ),i=19 ,24 ) /    62,    8,   -1,    8,  -10,   62/    
C               T[3,4,6,2,5,1]                                             
      DATA Denom(8  )/           54/                                       
      DATA (CF(i,8  ),i=1  ,6  ) /   -64,  -64,    8,    8,   80,   -1/    
      DATA (CF(i,8  ),i=7  ,12 ) /   -10,  512,    8,   -1,   71,   62/    
      DATA (CF(i,8  ),i=13 ,18 ) /   -10,   62,  -10,   62,    8,   80/    
      DATA (CF(i,8  ),i=19 ,24 ) /    -1,  -28,   -1,  -10,    8,  -64/    
C               T[3,4,2,1,5,6]                                             
      DATA Denom(9  )/           54/                                       
      DATA (CF(i,9  ),i=1  ,6  ) /   -64,   -1,    8,  -10,   -1,   62/    
      DATA (CF(i,9  ),i=7  ,12 ) /   -10,    8,  512,  -64,    8,   -1/    
      DATA (CF(i,9  ),i=13 ,18 ) /    71,   62,    8,   80,    8,  -64/    
      DATA (CF(i,9  ),i=19 ,24 ) /    -1,  -10,   62,  -28,  -10,   80/    
C               T[3,4,5,2,1,6]                                             
      DATA Denom(10 )/           54/                                       
      DATA (CF(i,10 ),i=1  ,6  ) /     8,  -10,  -64,   -1,    8,  -10/    
      DATA (CF(i,10 ),i=7  ,12 ) /    80,   -1,  -64,  512,  -64,    8/    
      DATA (CF(i,10 ),i=13 ,18 ) /    62,   71,   80,    8,   -1,    8/    
      DATA (CF(i,10 ),i=19 ,24 ) /   -10,   -1,  -28,   62,   62,  -10/    
C               T[3,4,5,2,6,1]                                             
      DATA Denom(11 )/           54/                                       
      DATA (CF(i,11 ),i=1  ,6  ) /    -1,   62,    8,  -10,   80,   -1/    
      DATA (CF(i,11 ),i=7  ,12 ) /     8,   71,    8,  -64,  512,  -64/    
      DATA (CF(i,11 ),i=13 ,18 ) /   -10,   -1,    8,  -64,  -10,   80/    
      DATA (CF(i,11 ),i=19 ,24 ) /    -1,    8,   62,  -10,  -28,   62/    
C               T[3,4,5,6,2,1]                                             
      DATA Denom(12 )/           54/                                       
      DATA (CF(i,12 ),i=1  ,6  ) /   -10,   71,   80,   -1,    8,    8/    
      DATA (CF(i,12 ),i=7  ,12 ) /   -64,   62,   -1,    8,  -64,  512/    
      DATA (CF(i,12 ),i=13 ,18 ) /    -1,    8,   -1,    8,   62,  -10/    
      DATA (CF(i,12 ),i=19 ,24 ) /   -10,  -64,  -10,   80,   62,  -28/    
C               T[3,4,6,5,2,1]                                             
      DATA Denom(13 )/           54/                                       
      DATA (CF(i,13 ),i=1  ,6  ) /    62,   -1,  -28,  -10,   62,   -1/    
      DATA (CF(i,13 ),i=7  ,12 ) /   -10,  -10,   71,   62,  -10,   -1/    
      DATA (CF(i,13 ),i=13 ,18 ) /   512,  -64,    8,   80,    8,   -1/    
      DATA (CF(i,13 ),i=19 ,24 ) /   -64,    8,  -64,    8,    8,   80/    
C               T[3,4,1,6,5,2]                                             
      DATA Denom(14 )/           54/                                       
      DATA (CF(i,14 ),i=1  ,6  ) /   -28,  -10,   62,   -1,  -10,    8/    
      DATA (CF(i,14 ),i=7  ,12 ) /    80,   62,   62,   71,   -1,    8/    
      DATA (CF(i,14 ),i=13 ,18 ) /   -64,  512,   80,    8,   -1,  -10/    
      DATA (CF(i,14 ),i=19 ,24 ) /     8,  -64,    8,  -64,   -1,  -10/    
C               T[3,4,6,1,5,2]                                             
      DATA Denom(15 )/           54/                                       
      DATA (CF(i,15 ),i=1  ,6  ) /    -1,   62,  -10,  -28,   62,   62/    
      DATA (CF(i,15 ),i=7  ,12 ) /    71,  -10,    8,   80,    8,   -1/    
      DATA (CF(i,15 ),i=13 ,18 ) /     8,   80,  512,  -64,    8,  -64/    
      DATA (CF(i,15 ),i=19 ,24 ) /   -64,    8,   -1,  -10,  -10,   -1/    
C               T[3,4,5,1,6,2]                                             
      DATA Denom(16 )/           54/                                       
      DATA (CF(i,16 ),i=1  ,6  ) /   -10,  -28,   -1,   62,  -10,  -10/    
      DATA (CF(i,16 ),i=7  ,12 ) /    -1,   62,   80,    8,  -64,    8/    
      DATA (CF(i,16 ),i=13 ,18 ) /    80,    8,  -64,  512,   -1,    8/    
      DATA (CF(i,16 ),i=19 ,24 ) /     8,  -64,  -10,   -1,   62,   71/    
C               T[3,4,5,6,1,2]                                             
      DATA Denom(17 )/           54/                                       
      DATA (CF(i,17 ),i=1  ,6  ) /    80,   -1,  -10,   71,   62,   62/    
      DATA (CF(i,17 ),i=7  ,12 ) /   -28,    8,    8,   -1,  -10,   62/    
      DATA (CF(i,17 ),i=13 ,18 ) /     8,   -1,    8,   -1,  512,  -64/    
      DATA (CF(i,17 ),i=19 ,24 ) /   -64,  -10,   80,  -10,    8,  -64/    
C               T[3,4,1,5,2,6]                                             
      DATA Denom(18 )/           54/                                       
      DATA (CF(i,18 ),i=1  ,6  ) /     8,  -10,   -1,   62,   71,  -28/    
      DATA (CF(i,18 ),i=7  ,12 ) /    62,   80,  -64,    8,   80,  -10/    
      DATA (CF(i,18 ),i=13 ,18 ) /    -1,  -10,  -64,    8,  -64,  512/    
      DATA (CF(i,18 ),i=19 ,24 ) /     8,   -1,  -10,   62,   -1,    8/    
C               T[3,4,5,1,2,6]                                             
      DATA Denom(19 )/           54/                                       
      DATA (CF(i,19 ),i=1  ,6  ) /   -10,  -10,   62,   62,  -28,   71/    
      DATA (CF(i,19 ),i=7  ,12 ) /    62,   -1,   -1,  -10,   -1,  -10/    
      DATA (CF(i,19 ),i=13 ,18 ) /   -64,    8,  -64,    8,  -64,    8/    
      DATA (CF(i,19 ),i=19 ,24 ) /   512,   80,    8,   -1,   80,    8/    
C               T[3,4,1,5,6,2]                                             
      DATA Denom(20 )/           54/                                       
      DATA (CF(i,20 ),i=1  ,6  ) /    62,   62,  -10,  -10,   -1,   80/    
      DATA (CF(i,20 ),i=7  ,12 ) /     8,  -28,  -10,   -1,    8,  -64/    
      DATA (CF(i,20 ),i=13 ,18 ) /     8,  -64,    8,  -64,  -10,   -1/    
      DATA (CF(i,20 ),i=19 ,24 ) /    80,  512,   -1,    8,   71,   62/    
C               T[3,4,6,5,1,2]                                             
      DATA Denom(21 )/           54/                                       
      DATA (CF(i,21 ),i=1  ,6  ) /    71,    8,   62,   80,  -10,    8/    
      DATA (CF(i,21 ),i=7  ,12 ) /    -1,   -1,   62,  -28,   62,  -10/    
      DATA (CF(i,21 ),i=13 ,18 ) /   -64,    8,   -1,  -10,   80,  -10/    
      DATA (CF(i,21 ),i=19 ,24 ) /     8,   -1,  512,  -64,  -64,    8/    
C               T[3,4,1,6,2,5]                                             
      DATA Denom(22 )/           54/                                       
      DATA (CF(i,22 ),i=1  ,6  ) /    62,   80,   71,    8,   -1,  -64/    
      DATA (CF(i,22 ),i=7  ,12 ) /     8,  -10,  -28,   62,  -10,   80/    
      DATA (CF(i,22 ),i=13 ,18 ) /     8,  -64,  -10,   -1,  -10,   62/    
      DATA (CF(i,22 ),i=19 ,24 ) /    -1,    8,  -64,  512,    8,   -1/    
C               T[3,4,6,1,2,5]                                             
      DATA Denom(23 )/           54/                                       
      DATA (CF(i,23 ),i=1  ,6  ) /    -1,  -64,  -10,    8,   -1,   80/    
      DATA (CF(i,23 ),i=7  ,12 ) /   -10,    8,  -10,   62,  -28,   62/    
      DATA (CF(i,23 ),i=13 ,18 ) /     8,   -1,  -10,   62,    8,   -1/    
      DATA (CF(i,23 ),i=19 ,24 ) /    80,   71,  -64,    8,  512,  -64/    
C               T[3,4,1,2,6,5]                                             
      DATA Denom(24 )/           54/                                       
      DATA (CF(i,24 ),i=1  ,6  ) /     8,    8,   -1,   -1,  -10,  -10/    
      DATA (CF(i,24 ),i=7  ,12 ) /    62,  -64,   80,  -10,   62,  -28/    
      DATA (CF(i,24 ),i=13 ,18 ) /    80,  -10,   -1,   71,  -64,    8/    
      DATA (CF(i,24 ),i=19 ,24 ) /     8,   62,    8,   -1,  -64,  512/    
C               T[3,4,1,2,5,6]                                             
C ----------
C BEGIN CODE
C ----------
      CALL VXXXXX(P(0,1   ),ZERO ,NHEL(1   ),-1*IC(1   ),W(1,1   ))        
      CALL VXXXXX(P(0,2   ),ZERO ,NHEL(2   ),-1*IC(2   ),W(1,2   ))        
      CALL OXXXXX(P(0,3   ),TMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL IXXXXX(P(0,4   ),TMASS ,NHEL(4   ),-1*IC(4   ),W(1,4   ))       
      CALL VXXXXX(P(0,5   ),ZERO ,NHEL(5   ),+1*IC(5   ),W(1,5   ))        
      CALL VXXXXX(P(0,6   ),ZERO ,NHEL(6   ),+1*IC(6   ),W(1,6   ))        
      CALL FVOXXX(W(1,3   ),W(1,2   ),GG ,TMASS   ,TWIDTH  ,W(1,7   ))     
      CALL JIOXXX(W(1,4   ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,8   ))     
      CALL JVVXXX(W(1,5   ),W(1,8   ),G ,ZERO    ,ZERO    ,W(1,9   ))      
      CALL VVVXXX(W(1,6   ),W(1,1   ),W(1,9   ),G ,AMP(1   ))              
      CALL JVVXXX(W(1,5   ),W(1,1   ),G ,ZERO    ,ZERO    ,W(1,10  ))      
      CALL JVVXXX(W(1,6   ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,11  ))      
      CALL FVOXXX(W(1,3   ),W(1,11  ),GG ,TMASS   ,TWIDTH  ,W(1,12  ))     
      CALL IOVXXX(W(1,4   ),W(1,12  ),W(1,10  ),GG ,AMP(2   ))             
      CALL FVOXXX(W(1,3   ),W(1,6   ),GG ,TMASS   ,TWIDTH  ,W(1,13  ))     
      CALL FVOXXX(W(1,13  ),W(1,2   ),GG ,TMASS   ,TWIDTH  ,W(1,14  ))     
      CALL IOVXXX(W(1,4   ),W(1,14  ),W(1,10  ),GG ,AMP(3   ))             
      CALL FVIXXX(W(1,4   ),W(1,6   ),GG ,TMASS   ,TWIDTH  ,W(1,15  ))     
      CALL IOVXXX(W(1,15  ),W(1,7   ),W(1,10  ),GG ,AMP(4   ))             
      CALL JVVXXX(W(1,8   ),W(1,1   ),G ,ZERO    ,ZERO    ,W(1,16  ))      
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,16  ),G ,AMP(5   ))              
      CALL FVOXXX(W(1,7   ),W(1,6   ),GG ,TMASS   ,TWIDTH  ,W(1,17  ))     
      CALL IOVXXX(W(1,4   ),W(1,17  ),W(1,10  ),GG ,AMP(6   ))             
      CALL VVVXXX(W(1,6   ),W(1,10  ),W(1,8   ),G ,AMP(7   ))              
      CALL GGGGXX(W(1,5   ),W(1,1   ),W(1,8   ),W(1,6   ),G ,AMP(8   ))    
      CALL GGGGXX(W(1,8   ),W(1,5   ),W(1,1   ),W(1,6   ),G ,AMP(9   ))    
      CALL GGGGXX(W(1,1   ),W(1,8   ),W(1,5   ),W(1,6   ),G ,AMP(10  ))    
      CALL JVVXXX(W(1,5   ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,18  ))      
      CALL JVVXXX(W(1,6   ),W(1,1   ),G ,ZERO    ,ZERO    ,W(1,19  ))      
      CALL FVOXXX(W(1,3   ),W(1,18  ),GG ,TMASS   ,TWIDTH  ,W(1,20  ))     
      CALL IOVXXX(W(1,4   ),W(1,20  ),W(1,19  ),GG ,AMP(11  ))             
      CALL FVIXXX(W(1,4   ),W(1,1   ),GG ,TMASS   ,TWIDTH  ,W(1,21  ))     
      CALL JIOXXX(W(1,21  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,22  ))     
      CALL VVVXXX(W(1,5   ),W(1,11  ),W(1,22  ),G ,AMP(12  ))              
      CALL IOVXXX(W(1,21  ),W(1,13  ),W(1,18  ),GG ,AMP(13  ))             
      CALL IOVXXX(W(1,15  ),W(1,20  ),W(1,1   ),GG ,AMP(14  ))             
      CALL JVVXXX(W(1,6   ),W(1,5   ),G ,ZERO    ,ZERO    ,W(1,23  ))      
      CALL VVVXXX(W(1,23  ),W(1,2   ),W(1,22  ),G ,AMP(15  ))              
      CALL FVIXXX(W(1,21  ),W(1,6   ),GG ,TMASS   ,TWIDTH  ,W(1,24  ))     
      CALL IOVXXX(W(1,24  ),W(1,3   ),W(1,18  ),GG ,AMP(16  ))             
      CALL JVVXXX(W(1,6   ),W(1,18  ),G ,ZERO    ,ZERO    ,W(1,25  ))      
      CALL IOVXXX(W(1,21  ),W(1,3   ),W(1,25  ),GG ,AMP(17  ))             
      CALL JGGGXX(W(1,5   ),W(1,2   ),W(1,6   ),G ,W(1,26  ))              
      CALL IOVXXX(W(1,21  ),W(1,3   ),W(1,26  ),GG ,AMP(18  ))             
      CALL JGGGXX(W(1,6   ),W(1,5   ),W(1,2   ),G ,W(1,27  ))              
      CALL IOVXXX(W(1,21  ),W(1,3   ),W(1,27  ),GG ,AMP(19  ))             
      CALL JGGGXX(W(1,2   ),W(1,6   ),W(1,5   ),G ,W(1,28  ))              
      CALL IOVXXX(W(1,21  ),W(1,3   ),W(1,28  ),GG ,AMP(20  ))             
      CALL FVOXXX(W(1,3   ),W(1,5   ),GG ,TMASS   ,TWIDTH  ,W(1,29  ))     
      CALL FVOXXX(W(1,29  ),W(1,2   ),GG ,TMASS   ,TWIDTH  ,W(1,30  ))     
      CALL IOVXXX(W(1,4   ),W(1,30  ),W(1,19  ),GG ,AMP(21  ))             
      CALL IOVXXX(W(1,21  ),W(1,29  ),W(1,11  ),GG ,AMP(22  ))             
      CALL FVIXXX(W(1,21  ),W(1,2   ),GG ,TMASS   ,TWIDTH  ,W(1,31  ))     
      CALL IOVXXX(W(1,31  ),W(1,13  ),W(1,5   ),GG ,AMP(23  ))             
      CALL IOVXXX(W(1,15  ),W(1,30  ),W(1,1   ),GG ,AMP(24  ))             
      CALL IOVXXX(W(1,31  ),W(1,3   ),W(1,23  ),GG ,AMP(25  ))             
      CALL IOVXXX(W(1,24  ),W(1,29  ),W(1,2   ),GG ,AMP(26  ))             
      CALL FVOXXX(W(1,29  ),W(1,6   ),GG ,TMASS   ,TWIDTH  ,W(1,32  ))     
      CALL IOVXXX(W(1,21  ),W(1,32  ),W(1,2   ),GG ,AMP(27  ))             
      CALL FVIXXX(W(1,4   ),W(1,5   ),GG ,TMASS   ,TWIDTH  ,W(1,33  ))     
      CALL IOVXXX(W(1,33  ),W(1,7   ),W(1,19  ),GG ,AMP(28  ))             
      CALL IOVXXX(W(1,33  ),W(1,12  ),W(1,1   ),GG ,AMP(29  ))             
      CALL IOVXXX(W(1,33  ),W(1,14  ),W(1,1   ),GG ,AMP(30  ))             
      CALL FVOXXX(W(1,7   ),W(1,1   ),GG ,TMASS   ,TWIDTH  ,W(1,34  ))     
      CALL FVOXXX(W(1,34  ),W(1,5   ),GG ,TMASS   ,TWIDTH  ,W(1,35  ))     
      CALL IOVXXX(W(1,4   ),W(1,35  ),W(1,6   ),GG ,AMP(31  ))             
      CALL JIOXXX(W(1,4   ),W(1,34  ),GG ,ZERO    ,ZERO    ,W(1,36  ))     
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,36  ),G ,AMP(32  ))              
      CALL IOVXXX(W(1,33  ),W(1,17  ),W(1,1   ),GG ,AMP(33  ))             
      CALL IOVXXX(W(1,33  ),W(1,34  ),W(1,6   ),GG ,AMP(34  ))             
      CALL FVOXXX(W(1,7   ),W(1,5   ),GG ,TMASS   ,TWIDTH  ,W(1,37  ))     
      CALL IOVXXX(W(1,4   ),W(1,37  ),W(1,19  ),GG ,AMP(35  ))             
      CALL FVIXXX(W(1,21  ),W(1,5   ),GG ,TMASS   ,TWIDTH  ,W(1,38  ))     
      CALL IOVXXX(W(1,38  ),W(1,3   ),W(1,11  ),GG ,AMP(36  ))             
      CALL IOVXXX(W(1,38  ),W(1,13  ),W(1,2   ),GG ,AMP(37  ))             
      CALL IOVXXX(W(1,15  ),W(1,37  ),W(1,1   ),GG ,AMP(38  ))             
      CALL JIOXXX(W(1,21  ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,39  ))     
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,39  ),G ,AMP(39  ))              
      CALL IOVXXX(W(1,21  ),W(1,37  ),W(1,6   ),GG ,AMP(40  ))             
      CALL IOVXXX(W(1,38  ),W(1,7   ),W(1,6   ),GG ,AMP(41  ))             
      CALL FVIXXX(W(1,4   ),W(1,2   ),GG ,TMASS   ,TWIDTH  ,W(1,40  ))     
      CALL JIOXXX(W(1,40  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,41  ))     
      CALL VVVXXX(W(1,5   ),W(1,19  ),W(1,41  ),G ,AMP(42  ))              
      CALL FVOXXX(W(1,3   ),W(1,10  ),GG ,TMASS   ,TWIDTH  ,W(1,42  ))     
      CALL IOVXXX(W(1,4   ),W(1,42  ),W(1,11  ),GG ,AMP(43  ))             
      CALL IOVXXX(W(1,40  ),W(1,13  ),W(1,10  ),GG ,AMP(44  ))             
      CALL IOVXXX(W(1,15  ),W(1,42  ),W(1,2   ),GG ,AMP(45  ))             
      CALL VVVXXX(W(1,23  ),W(1,1   ),W(1,41  ),G ,AMP(46  ))              
      CALL FVIXXX(W(1,40  ),W(1,6   ),GG ,TMASS   ,TWIDTH  ,W(1,43  ))     
      CALL IOVXXX(W(1,43  ),W(1,3   ),W(1,10  ),GG ,AMP(47  ))             
      CALL JVVXXX(W(1,6   ),W(1,10  ),G ,ZERO    ,ZERO    ,W(1,44  ))      
      CALL IOVXXX(W(1,40  ),W(1,3   ),W(1,44  ),GG ,AMP(48  ))             
      CALL JGGGXX(W(1,5   ),W(1,1   ),W(1,6   ),G ,W(1,45  ))              
      CALL IOVXXX(W(1,40  ),W(1,3   ),W(1,45  ),GG ,AMP(49  ))             
      CALL JGGGXX(W(1,6   ),W(1,5   ),W(1,1   ),G ,W(1,46  ))              
      CALL IOVXXX(W(1,40  ),W(1,3   ),W(1,46  ),GG ,AMP(50  ))             
      CALL JGGGXX(W(1,1   ),W(1,6   ),W(1,5   ),G ,W(1,47  ))              
      CALL IOVXXX(W(1,40  ),W(1,3   ),W(1,47  ),GG ,AMP(51  ))             
      CALL FVOXXX(W(1,3   ),W(1,19  ),GG ,TMASS   ,TWIDTH  ,W(1,48  ))     
      CALL IOVXXX(W(1,4   ),W(1,48  ),W(1,18  ),GG ,AMP(52  ))             
      CALL FVOXXX(W(1,3   ),W(1,1   ),GG ,TMASS   ,TWIDTH  ,W(1,49  ))     
      CALL JIOXXX(W(1,4   ),W(1,49  ),GG ,ZERO    ,ZERO    ,W(1,50  ))     
      CALL JVVXXX(W(1,5   ),W(1,50  ),G ,ZERO    ,ZERO    ,W(1,51  ))      
      CALL VVVXXX(W(1,6   ),W(1,2   ),W(1,51  ),G ,AMP(53  ))              
      CALL FVOXXX(W(1,13  ),W(1,1   ),GG ,TMASS   ,TWIDTH  ,W(1,52  ))     
      CALL IOVXXX(W(1,4   ),W(1,52  ),W(1,18  ),GG ,AMP(54  ))             
      CALL IOVXXX(W(1,15  ),W(1,49  ),W(1,18  ),GG ,AMP(55  ))             
      CALL JVVXXX(W(1,50  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,53  ))      
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,53  ),G ,AMP(56  ))              
      CALL FVOXXX(W(1,49  ),W(1,6   ),GG ,TMASS   ,TWIDTH  ,W(1,54  ))     
      CALL IOVXXX(W(1,4   ),W(1,54  ),W(1,18  ),GG ,AMP(57  ))             
      CALL VVVXXX(W(1,6   ),W(1,18  ),W(1,50  ),G ,AMP(58  ))              
      CALL GGGGXX(W(1,5   ),W(1,2   ),W(1,50  ),W(1,6   ),G ,AMP(59  ))    
      CALL GGGGXX(W(1,50  ),W(1,5   ),W(1,2   ),W(1,6   ),G ,AMP(60  ))    
      CALL GGGGXX(W(1,2   ),W(1,50  ),W(1,5   ),W(1,6   ),G ,AMP(61  ))    
      CALL IOVXXX(W(1,40  ),W(1,29  ),W(1,19  ),GG ,AMP(62  ))             
      CALL FVOXXX(W(1,29  ),W(1,1   ),GG ,TMASS   ,TWIDTH  ,W(1,55  ))     
      CALL IOVXXX(W(1,4   ),W(1,55  ),W(1,11  ),GG ,AMP(63  ))             
      CALL FVIXXX(W(1,40  ),W(1,1   ),GG ,TMASS   ,TWIDTH  ,W(1,56  ))     
      CALL IOVXXX(W(1,56  ),W(1,13  ),W(1,5   ),GG ,AMP(64  ))             
      CALL IOVXXX(W(1,15  ),W(1,55  ),W(1,2   ),GG ,AMP(65  ))             
      CALL IOVXXX(W(1,56  ),W(1,3   ),W(1,23  ),GG ,AMP(66  ))             
      CALL IOVXXX(W(1,43  ),W(1,29  ),W(1,1   ),GG ,AMP(67  ))             
      CALL IOVXXX(W(1,40  ),W(1,32  ),W(1,1   ),GG ,AMP(68  ))             
      CALL IOVXXX(W(1,33  ),W(1,48  ),W(1,2   ),GG ,AMP(69  ))             
      CALL IOVXXX(W(1,33  ),W(1,49  ),W(1,11  ),GG ,AMP(70  ))             
      CALL IOVXXX(W(1,33  ),W(1,52  ),W(1,2   ),GG ,AMP(71  ))             
      CALL FVOXXX(W(1,49  ),W(1,2   ),GG ,TMASS   ,TWIDTH  ,W(1,57  ))     
      CALL FVOXXX(W(1,57  ),W(1,5   ),GG ,TMASS   ,TWIDTH  ,W(1,58  ))     
      CALL IOVXXX(W(1,4   ),W(1,58  ),W(1,6   ),GG ,AMP(72  ))             
      CALL JIOXXX(W(1,4   ),W(1,57  ),GG ,ZERO    ,ZERO    ,W(1,59  ))     
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,59  ),G ,AMP(73  ))              
      CALL IOVXXX(W(1,33  ),W(1,54  ),W(1,2   ),GG ,AMP(74  ))             
      CALL IOVXXX(W(1,33  ),W(1,57  ),W(1,6   ),GG ,AMP(75  ))             
      CALL FVIXXX(W(1,40  ),W(1,5   ),GG ,TMASS   ,TWIDTH  ,W(1,60  ))     
      CALL IOVXXX(W(1,60  ),W(1,3   ),W(1,19  ),GG ,AMP(76  ))             
      CALL FVOXXX(W(1,49  ),W(1,5   ),GG ,TMASS   ,TWIDTH  ,W(1,61  ))     
      CALL IOVXXX(W(1,4   ),W(1,61  ),W(1,11  ),GG ,AMP(77  ))             
      CALL IOVXXX(W(1,60  ),W(1,13  ),W(1,1   ),GG ,AMP(78  ))             
      CALL IOVXXX(W(1,15  ),W(1,61  ),W(1,2   ),GG ,AMP(79  ))             
      CALL JIOXXX(W(1,40  ),W(1,49  ),GG ,ZERO    ,ZERO    ,W(1,62  ))     
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,62  ),G ,AMP(80  ))              
      CALL IOVXXX(W(1,40  ),W(1,61  ),W(1,6   ),GG ,AMP(81  ))             
      CALL IOVXXX(W(1,60  ),W(1,49  ),W(1,6   ),GG ,AMP(82  ))             
      CALL JIOXXX(W(1,4   ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,63  ))     
      CALL JVVXXX(W(1,63  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,64  ))      
      CALL VVVXXX(W(1,5   ),W(1,19  ),W(1,64  ),G ,AMP(83  ))              
      CALL VVVXXX(W(1,10  ),W(1,11  ),W(1,63  ),G ,AMP(84  ))              
      CALL JVVXXX(W(1,10  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,65  ))      
      CALL IOVXXX(W(1,4   ),W(1,13  ),W(1,65  ),GG ,AMP(85  ))             
      CALL IOVXXX(W(1,15  ),W(1,3   ),W(1,65  ),GG ,AMP(86  ))             
      CALL VVVXXX(W(1,23  ),W(1,1   ),W(1,64  ),G ,AMP(87  ))              
      CALL JVVXXX(W(1,6   ),W(1,63  ),G ,ZERO    ,ZERO    ,W(1,66  ))      
      CALL VVVXXX(W(1,10  ),W(1,2   ),W(1,66  ),G ,AMP(88  ))              
      CALL VVVXXX(W(1,44  ),W(1,2   ),W(1,63  ),G ,AMP(89  ))              
      CALL GGGGXX(W(1,10  ),W(1,2   ),W(1,63  ),W(1,6   ),G ,AMP(90  ))    
      CALL GGGGXX(W(1,63  ),W(1,10  ),W(1,2   ),W(1,6   ),G ,AMP(91  ))    
      CALL GGGGXX(W(1,2   ),W(1,63  ),W(1,10  ),W(1,6   ),G ,AMP(92  ))    
      CALL VVVXXX(W(1,45  ),W(1,2   ),W(1,63  ),G ,AMP(93  ))              
      CALL VVVXXX(W(1,46  ),W(1,2   ),W(1,63  ),G ,AMP(94  ))              
      CALL VVVXXX(W(1,47  ),W(1,2   ),W(1,63  ),G ,AMP(95  ))              
      CALL VVVXXX(W(1,19  ),W(1,18  ),W(1,63  ),G ,AMP(96  ))              
      CALL JVVXXX(W(1,1   ),W(1,63  ),G ,ZERO    ,ZERO    ,W(1,67  ))      
      CALL VVVXXX(W(1,5   ),W(1,11  ),W(1,67  ),G ,AMP(97  ))              
      CALL JVVXXX(W(1,1   ),W(1,18  ),G ,ZERO    ,ZERO    ,W(1,68  ))      
      CALL IOVXXX(W(1,4   ),W(1,13  ),W(1,68  ),GG ,AMP(98  ))             
      CALL IOVXXX(W(1,15  ),W(1,3   ),W(1,68  ),GG ,AMP(99  ))             
      CALL VVVXXX(W(1,23  ),W(1,2   ),W(1,67  ),G ,AMP(100 ))              
      CALL VVVXXX(W(1,1   ),W(1,18  ),W(1,66  ),G ,AMP(101 ))              
      CALL VVVXXX(W(1,1   ),W(1,25  ),W(1,63  ),G ,AMP(102 ))              
      CALL GGGGXX(W(1,1   ),W(1,18  ),W(1,63  ),W(1,6   ),G ,AMP(103 ))    
      CALL GGGGXX(W(1,63  ),W(1,1   ),W(1,18  ),W(1,6   ),G ,AMP(104 ))    
      CALL GGGGXX(W(1,18  ),W(1,63  ),W(1,1   ),W(1,6   ),G ,AMP(105 ))    
      CALL VVVXXX(W(1,1   ),W(1,26  ),W(1,63  ),G ,AMP(106 ))              
      CALL VVVXXX(W(1,1   ),W(1,27  ),W(1,63  ),G ,AMP(107 ))              
      CALL VVVXXX(W(1,1   ),W(1,28  ),W(1,63  ),G ,AMP(108 ))              
      CALL JVVXXX(W(1,19  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,69  ))      
      CALL IOVXXX(W(1,4   ),W(1,29  ),W(1,69  ),GG ,AMP(109 ))             
      CALL JVVXXX(W(1,1   ),W(1,11  ),G ,ZERO    ,ZERO    ,W(1,70  ))      
      CALL IOVXXX(W(1,4   ),W(1,29  ),W(1,70  ),GG ,AMP(110 ))             
      CALL JVVXXX(W(1,1   ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,71  ))      
      CALL FVIXXX(W(1,4   ),W(1,71  ),GG ,TMASS   ,TWIDTH  ,W(1,72  ))     
      CALL FVIXXX(W(1,72  ),W(1,5   ),GG ,TMASS   ,TWIDTH  ,W(1,73  ))     
      CALL IOVXXX(W(1,73  ),W(1,3   ),W(1,6   ),GG ,AMP(111 ))             
      CALL IOVXXX(W(1,15  ),W(1,29  ),W(1,71  ),GG ,AMP(112 ))             
      CALL JIOXXX(W(1,72  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,74  ))     
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,74  ),G ,AMP(113 ))              
      CALL JVVXXX(W(1,6   ),W(1,71  ),G ,ZERO    ,ZERO    ,W(1,75  ))      
      CALL IOVXXX(W(1,4   ),W(1,29  ),W(1,75  ),GG ,AMP(114 ))             
      CALL IOVXXX(W(1,72  ),W(1,29  ),W(1,6   ),GG ,AMP(115 ))             
      CALL JGGGXX(W(1,1   ),W(1,2   ),W(1,6   ),G ,W(1,76  ))              
      CALL FVIXXX(W(1,4   ),W(1,76  ),GG ,TMASS   ,TWIDTH  ,W(1,77  ))     
      CALL IOVXXX(W(1,77  ),W(1,3   ),W(1,5   ),GG ,AMP(116 ))             
      CALL JGGGXX(W(1,6   ),W(1,1   ),W(1,2   ),G ,W(1,78  ))              
      CALL FVIXXX(W(1,4   ),W(1,78  ),GG ,TMASS   ,TWIDTH  ,W(1,79  ))     
      CALL IOVXXX(W(1,79  ),W(1,3   ),W(1,5   ),GG ,AMP(117 ))             
      CALL JGGGXX(W(1,2   ),W(1,6   ),W(1,1   ),G ,W(1,80  ))              
      CALL FVIXXX(W(1,4   ),W(1,80  ),GG ,TMASS   ,TWIDTH  ,W(1,81  ))     
      CALL IOVXXX(W(1,81  ),W(1,3   ),W(1,5   ),GG ,AMP(118 ))             
      CALL IOVXXX(W(1,33  ),W(1,3   ),W(1,69  ),GG ,AMP(119 ))             
      CALL IOVXXX(W(1,33  ),W(1,3   ),W(1,70  ),GG ,AMP(120 ))             
      CALL IOVXXX(W(1,33  ),W(1,13  ),W(1,71  ),GG ,AMP(121 ))             
      CALL FVOXXX(W(1,3   ),W(1,71  ),GG ,TMASS   ,TWIDTH  ,W(1,82  ))     
      CALL FVOXXX(W(1,82  ),W(1,5   ),GG ,TMASS   ,TWIDTH  ,W(1,83  ))     
      CALL IOVXXX(W(1,4   ),W(1,83  ),W(1,6   ),GG ,AMP(122 ))             
      CALL JIOXXX(W(1,4   ),W(1,82  ),GG ,ZERO    ,ZERO    ,W(1,84  ))     
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,84  ),G ,AMP(123 ))              
      CALL IOVXXX(W(1,33  ),W(1,3   ),W(1,75  ),GG ,AMP(124 ))             
      CALL IOVXXX(W(1,33  ),W(1,82  ),W(1,6   ),GG ,AMP(125 ))             
      CALL FVOXXX(W(1,3   ),W(1,76  ),GG ,TMASS   ,TWIDTH  ,W(1,85  ))     
      CALL IOVXXX(W(1,4   ),W(1,85  ),W(1,5   ),GG ,AMP(126 ))             
      CALL FVOXXX(W(1,3   ),W(1,78  ),GG ,TMASS   ,TWIDTH  ,W(1,86  ))     
      CALL IOVXXX(W(1,4   ),W(1,86  ),W(1,5   ),GG ,AMP(127 ))             
      CALL FVOXXX(W(1,3   ),W(1,80  ),GG ,TMASS   ,TWIDTH  ,W(1,87  ))     
      CALL IOVXXX(W(1,4   ),W(1,87  ),W(1,5   ),GG ,AMP(128 ))             
      CALL JVVXXX(W(1,5   ),W(1,63  ),G ,ZERO    ,ZERO    ,W(1,88  ))      
      CALL VVVXXX(W(1,19  ),W(1,2   ),W(1,88  ),G ,AMP(129 ))              
      CALL VVVXXX(W(1,1   ),W(1,11  ),W(1,88  ),G ,AMP(130 ))              
      CALL JVVXXX(W(1,5   ),W(1,71  ),G ,ZERO    ,ZERO    ,W(1,89  ))      
      CALL IOVXXX(W(1,4   ),W(1,13  ),W(1,89  ),GG ,AMP(131 ))             
      CALL IOVXXX(W(1,15  ),W(1,3   ),W(1,89  ),GG ,AMP(132 ))             
      CALL JVVXXX(W(1,71  ),W(1,63  ),G ,ZERO    ,ZERO    ,W(1,90  ))      
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,90  ),G ,AMP(133 ))              
      CALL VVVXXX(W(1,6   ),W(1,89  ),W(1,63  ),G ,AMP(134 ))              
      CALL VVVXXX(W(1,6   ),W(1,88  ),W(1,71  ),G ,AMP(135 ))              
      CALL VVVXXX(W(1,5   ),W(1,63  ),W(1,76  ),G ,AMP(136 ))              
      CALL VVVXXX(W(1,5   ),W(1,63  ),W(1,78  ),G ,AMP(137 ))              
      CALL VVVXXX(W(1,5   ),W(1,63  ),W(1,80  ),G ,AMP(138 ))              
      CALL GGGGXX(W(1,5   ),W(1,63  ),W(1,71  ),W(1,6   ),G ,AMP(139 ))    
      CALL GGGGXX(W(1,71  ),W(1,5   ),W(1,63  ),W(1,6   ),G ,AMP(140 ))    
      CALL GGGGXX(W(1,63  ),W(1,71  ),W(1,5   ),W(1,6   ),G ,AMP(141 ))    
      CALL GGGGXX(W(1,19  ),W(1,2   ),W(1,63  ),W(1,5   ),G ,AMP(142 ))    
      CALL GGGGXX(W(1,63  ),W(1,19  ),W(1,2   ),W(1,5   ),G ,AMP(143 ))    
      CALL GGGGXX(W(1,2   ),W(1,63  ),W(1,19  ),W(1,5   ),G ,AMP(144 ))    
      CALL GGGGXX(W(1,1   ),W(1,11  ),W(1,63  ),W(1,5   ),G ,AMP(145 ))    
      CALL GGGGXX(W(1,63  ),W(1,1   ),W(1,11  ),W(1,5   ),G ,AMP(146 ))    
      CALL GGGGXX(W(1,11  ),W(1,63  ),W(1,1   ),W(1,5   ),G ,AMP(147 ))    
      CALL JGGGXX(W(1,1   ),W(1,2   ),W(1,5   ),G ,W(1,91  ))              
      CALL FVIXXX(W(1,4   ),W(1,91  ),GG ,TMASS   ,TWIDTH  ,W(1,92  ))     
      CALL IOVXXX(W(1,92  ),W(1,3   ),W(1,6   ),GG ,AMP(148 ))             
      CALL JGGGXX(W(1,5   ),W(1,1   ),W(1,2   ),G ,W(1,93  ))              
      CALL FVIXXX(W(1,4   ),W(1,93  ),GG ,TMASS   ,TWIDTH  ,W(1,94  ))     
      CALL IOVXXX(W(1,94  ),W(1,3   ),W(1,6   ),GG ,AMP(149 ))             
      CALL JGGGXX(W(1,2   ),W(1,5   ),W(1,1   ),G ,W(1,95  ))              
      CALL FVIXXX(W(1,4   ),W(1,95  ),GG ,TMASS   ,TWIDTH  ,W(1,96  ))     
      CALL IOVXXX(W(1,96  ),W(1,3   ),W(1,6   ),GG ,AMP(150 ))             
      CALL FVOXXX(W(1,3   ),W(1,91  ),GG ,TMASS   ,TWIDTH  ,W(1,97  ))     
      CALL IOVXXX(W(1,4   ),W(1,97  ),W(1,6   ),GG ,AMP(151 ))             
      CALL FVOXXX(W(1,3   ),W(1,93  ),GG ,TMASS   ,TWIDTH  ,W(1,98  ))     
      CALL IOVXXX(W(1,4   ),W(1,98  ),W(1,6   ),GG ,AMP(152 ))             
      CALL FVOXXX(W(1,3   ),W(1,95  ),GG ,TMASS   ,TWIDTH  ,W(1,99  ))     
      CALL IOVXXX(W(1,4   ),W(1,99  ),W(1,6   ),GG ,AMP(153 ))             
      CALL GGGGXX(W(1,1   ),W(1,2   ),W(1,63  ),W(1,23  ),G ,AMP(154 ))    
      CALL GGGGXX(W(1,63  ),W(1,1   ),W(1,2   ),W(1,23  ),G ,AMP(155 ))    
      CALL GGGGXX(W(1,2   ),W(1,63  ),W(1,1   ),W(1,23  ),G ,AMP(156 ))    
      CALL VVVXXX(W(1,6   ),W(1,63  ),W(1,91  ),G ,AMP(157 ))              
      CALL VVVXXX(W(1,6   ),W(1,63  ),W(1,93  ),G ,AMP(158 ))              
      CALL VVVXXX(W(1,6   ),W(1,63  ),W(1,95  ),G ,AMP(159 ))              
      JAMP(   1) = -AMP(   1)-AMP(   4)+AMP(   7)-AMP(   8)+AMP(   9)
     &             -AMP(  11)+AMP(  14)+AMP(  35)-AMP(  38)+AMP(  83)
     &             +AMP(  86)+AMP(  88)-AMP(  89)+AMP(  90)-AMP(  92)
     &             -AMP(  93)+AMP(  95)+AMP(  96)-AMP(  99)-AMP( 101)
     &             -AMP( 103)+AMP( 105)+AMP( 143)-AMP( 144)-AMP( 152)
     &             +AMP( 153)-AMP( 158)+AMP( 159)
      JAMP(   2) = +AMP(   1)-AMP(   5)-AMP(   9)+AMP(  10)+AMP(  28)
     &             -AMP(  32)-AMP(  34)-AMP(  83)+AMP(  87)+AMP(  94)
     &             -AMP(  95)-AMP( 119)+AMP( 123)-AMP( 124)+AMP( 125)
     &             -AMP( 126)+AMP( 127)-AMP( 129)-AMP( 133)+AMP( 135)
     &             -AMP( 136)+AMP( 137)-AMP( 139)+AMP( 141)-AMP( 142)
     &             +AMP( 144)+AMP( 154)-AMP( 156)
      JAMP(   3) = +AMP(   1)-AMP(   5)-AMP(   9)+AMP(  10)+AMP(  11)
     &             -AMP(  15)+AMP(  16)-AMP(  17)-AMP(  18)+AMP(  19)
     &             -AMP(  35)+AMP(  39)-AMP(  40)-AMP(  83)+AMP(  87)
     &             +AMP(  94)-AMP(  95)-AMP(  96)-AMP( 100)+AMP( 102)
     &             +AMP( 104)-AMP( 105)+AMP( 106)-AMP( 107)-AMP( 143)
     &             +AMP( 144)+AMP( 155)-AMP( 156)
      JAMP(   4) = -AMP(   1)-AMP(   2)+AMP(   6)+AMP(   7)-AMP(   8)
     &             +AMP(   9)-AMP(  28)+AMP(  29)-AMP(  33)+AMP(  83)
     &             +AMP(  84)-AMP(  89)+AMP(  91)-AMP(  92)-AMP(  93)
     &             +AMP(  95)+AMP( 119)-AMP( 120)-AMP( 127)+AMP( 128)
     &             +AMP( 129)-AMP( 130)-AMP( 137)+AMP( 138)+AMP( 142)
     &             -AMP( 144)-AMP( 145)+AMP( 147)
      JAMP(   5) = +AMP(   2)+AMP(   5)-AMP(   6)-AMP(   7)+AMP(   8)
     &             -AMP(  10)-AMP(  12)+AMP(  15)-AMP(  19)+AMP(  20)
     &             +AMP(  36)-AMP(  39)-AMP(  41)-AMP(  84)-AMP(  87)
     &             +AMP(  89)-AMP(  91)+AMP(  92)+AMP(  93)-AMP(  94)
     &             -AMP(  97)+AMP( 100)+AMP( 107)-AMP( 108)+AMP( 146)
     &             -AMP( 147)-AMP( 155)+AMP( 156)
      JAMP(   6) = +AMP(   2)+AMP(   3)-AMP(  29)-AMP(  30)-AMP(  84)
     &             -AMP(  85)+AMP(  88)+AMP(  90)-AMP(  91)+AMP( 120)
     &             +AMP( 121)+AMP( 124)+AMP( 126)-AMP( 128)+AMP( 130)
     &             -AMP( 131)-AMP( 134)-AMP( 135)+AMP( 136)-AMP( 138)
     &             +AMP( 139)-AMP( 140)+AMP( 145)-AMP( 147)-AMP( 148)
     &             +AMP( 149)+AMP( 157)-AMP( 158)
      JAMP(   7) = -AMP(   2)-AMP(   3)+AMP(  12)+AMP(  13)+AMP(  17)
     &             +AMP(  18)-AMP(  20)-AMP(  36)-AMP(  37)+AMP(  84)
     &             +AMP(  85)-AMP(  88)-AMP(  90)+AMP(  91)+AMP(  97)
     &             -AMP(  98)+AMP( 101)-AMP( 102)+AMP( 103)-AMP( 104)
     &             -AMP( 106)+AMP( 108)-AMP( 146)+AMP( 147)-AMP( 149)
     &             +AMP( 150)+AMP( 158)-AMP( 159)
      JAMP(   8) = +AMP(   4)+AMP(   5)-AMP(   7)+AMP(   8)-AMP(  10)
     &             -AMP(  31)+AMP(  32)-AMP(  86)-AMP(  87)-AMP(  88)
     &             +AMP(  89)-AMP(  90)+AMP(  92)+AMP(  93)-AMP(  94)
     &             +AMP( 122)-AMP( 123)-AMP( 132)+AMP( 133)+AMP( 134)
     &             +AMP( 140)-AMP( 141)-AMP( 151)+AMP( 152)-AMP( 154)
     &             +AMP( 156)-AMP( 157)+AMP( 158)
      JAMP(   9) = +AMP(  11)-AMP(  14)+AMP(  21)-AMP(  24)-AMP(  96)
     &             +AMP(  99)+AMP( 101)+AMP( 103)-AMP( 105)-AMP( 109)
     &             +AMP( 112)-AMP( 114)-AMP( 116)+AMP( 117)+AMP( 129)
     &             +AMP( 132)-AMP( 134)-AMP( 135)+AMP( 136)-AMP( 137)
     &             +AMP( 139)-AMP( 140)+AMP( 142)-AMP( 143)+AMP( 151)
     &             -AMP( 153)+AMP( 157)-AMP( 159)
      JAMP(  10) = -AMP(  11)+AMP(  12)-AMP(  16)+AMP(  17)+AMP(  18)
     &             -AMP(  20)-AMP(  21)+AMP(  22)-AMP(  26)+AMP(  96)
     &             +AMP(  97)-AMP( 102)-AMP( 104)+AMP( 105)-AMP( 106)
     &             +AMP( 108)+AMP( 109)-AMP( 110)-AMP( 117)+AMP( 118)
     &             -AMP( 129)+AMP( 130)+AMP( 137)-AMP( 138)-AMP( 142)
     &             +AMP( 143)+AMP( 145)-AMP( 146)
      JAMP(  11) = -AMP(  12)+AMP(  15)-AMP(  19)+AMP(  20)-AMP(  22)
     &             +AMP(  25)-AMP(  27)-AMP(  97)+AMP( 100)+AMP( 107)
     &             -AMP( 108)+AMP( 110)-AMP( 113)+AMP( 114)+AMP( 115)
     &             +AMP( 116)-AMP( 118)-AMP( 130)-AMP( 133)+AMP( 135)
     &             -AMP( 136)+AMP( 138)-AMP( 139)+AMP( 141)-AMP( 145)
     &             +AMP( 146)+AMP( 154)-AMP( 155)
      JAMP(  12) = -AMP(  13)-AMP(  15)-AMP(  17)-AMP(  18)+AMP(  19)
     &             -AMP(  23)-AMP(  25)+AMP(  98)-AMP( 100)-AMP( 101)
     &             +AMP( 102)-AMP( 103)+AMP( 104)+AMP( 106)-AMP( 107)
     &             +AMP( 111)+AMP( 113)+AMP( 131)+AMP( 133)+AMP( 134)
     &             +AMP( 140)-AMP( 141)+AMP( 148)-AMP( 150)-AMP( 154)
     &             +AMP( 155)-AMP( 157)+AMP( 159)
      JAMP(  13) = -AMP(  42)+AMP(  46)-AMP(  50)+AMP(  51)+AMP(  52)
     &             +AMP(  56)-AMP(  57)-AMP(  58)+AMP(  59)-AMP(  61)
     &             +AMP(  76)-AMP(  80)-AMP(  82)+AMP(  83)-AMP(  87)
     &             -AMP(  94)+AMP(  95)+AMP(  96)+AMP( 100)-AMP( 102)
     &             -AMP( 104)+AMP( 105)-AMP( 106)+AMP( 107)+AMP( 143)
     &             -AMP( 144)-AMP( 155)+AMP( 156)
      JAMP(  14) = +AMP(  42)+AMP(  44)+AMP(  48)+AMP(  49)-AMP(  51)
     &             -AMP(  52)-AMP(  54)-AMP(  76)-AMP(  78)-AMP(  83)
     &             +AMP(  85)-AMP(  88)+AMP(  89)-AMP(  90)+AMP(  92)
     &             +AMP(  93)-AMP(  95)-AMP(  96)-AMP(  98)+AMP( 101)
     &             +AMP( 103)-AMP( 105)-AMP( 143)+AMP( 144)-AMP( 149)
     &             +AMP( 150)+AMP( 158)-AMP( 159)
      JAMP(  15) = +AMP(  42)-AMP(  43)-AMP(  47)+AMP(  48)+AMP(  49)
     &             -AMP(  51)+AMP(  62)-AMP(  63)-AMP(  67)-AMP(  83)
     &             -AMP(  84)+AMP(  89)-AMP(  91)+AMP(  92)+AMP(  93)
     &             -AMP(  95)+AMP( 109)-AMP( 110)-AMP( 117)+AMP( 118)
     &             -AMP( 129)+AMP( 130)+AMP( 137)-AMP( 138)-AMP( 142)
     &             +AMP( 144)+AMP( 145)-AMP( 147)
      JAMP(  16) = -AMP(  42)+AMP(  46)-AMP(  50)+AMP(  51)-AMP(  62)
     &             +AMP(  66)-AMP(  68)+AMP(  83)-AMP(  87)-AMP(  94)
     &             +AMP(  95)-AMP( 109)+AMP( 113)-AMP( 114)-AMP( 115)
     &             -AMP( 116)+AMP( 117)+AMP( 129)+AMP( 133)-AMP( 135)
     &             +AMP( 136)-AMP( 137)+AMP( 139)-AMP( 141)+AMP( 142)
     &             -AMP( 144)-AMP( 154)+AMP( 156)
      JAMP(  17) = -AMP(  43)+AMP(  45)-AMP(  53)-AMP(  55)+AMP(  58)
     &             -AMP(  59)+AMP(  60)+AMP(  77)-AMP(  79)-AMP(  84)
     &             +AMP(  86)+AMP(  88)+AMP(  90)-AMP(  91)-AMP(  97)
     &             -AMP(  99)-AMP( 101)+AMP( 102)-AMP( 103)+AMP( 104)
     &             +AMP( 106)-AMP( 108)+AMP( 146)-AMP( 147)-AMP( 152)
     &             +AMP( 153)-AMP( 158)+AMP( 159)
      JAMP(  18) = +AMP(  43)-AMP(  45)+AMP(  63)-AMP(  65)+AMP(  84)
     &             -AMP(  86)-AMP(  88)-AMP(  90)+AMP(  91)+AMP( 110)
     &             -AMP( 112)+AMP( 114)+AMP( 116)-AMP( 118)-AMP( 130)
     &             -AMP( 132)+AMP( 134)+AMP( 135)-AMP( 136)+AMP( 138)
     &             -AMP( 139)+AMP( 140)-AMP( 145)+AMP( 147)-AMP( 151)
     &             +AMP( 152)-AMP( 157)+AMP( 158)
      JAMP(  19) = +AMP(  43)-AMP(  46)+AMP(  47)-AMP(  48)-AMP(  49)
     &             +AMP(  50)+AMP(  53)-AMP(  56)-AMP(  60)+AMP(  61)
     &             -AMP(  77)+AMP(  80)-AMP(  81)+AMP(  84)+AMP(  87)
     &             -AMP(  89)+AMP(  91)-AMP(  92)-AMP(  93)+AMP(  94)
     &             +AMP(  97)-AMP( 100)-AMP( 107)+AMP( 108)-AMP( 146)
     &             +AMP( 147)+AMP( 155)-AMP( 156)
      JAMP(  20) = -AMP(  44)-AMP(  46)-AMP(  48)-AMP(  49)+AMP(  50)
     &             -AMP(  64)-AMP(  66)-AMP(  85)+AMP(  87)+AMP(  88)
     &             -AMP(  89)+AMP(  90)-AMP(  92)-AMP(  93)+AMP(  94)
     &             -AMP( 111)-AMP( 113)-AMP( 131)-AMP( 133)-AMP( 134)
     &             -AMP( 140)+AMP( 141)-AMP( 148)+AMP( 149)+AMP( 154)
     &             -AMP( 156)+AMP( 157)-AMP( 158)
      JAMP(  21) = -AMP(  52)-AMP(  53)+AMP(  57)+AMP(  58)-AMP(  59)
     &             +AMP(  60)+AMP(  69)-AMP(  70)-AMP(  74)-AMP(  96)
     &             -AMP(  97)+AMP( 102)+AMP( 104)-AMP( 105)+AMP( 106)
     &             -AMP( 108)+AMP( 119)-AMP( 120)-AMP( 127)+AMP( 128)
     &             +AMP( 129)-AMP( 130)-AMP( 137)+AMP( 138)+AMP( 142)
     &             -AMP( 143)-AMP( 145)+AMP( 146)
      JAMP(  22) = +AMP(  52)+AMP(  54)-AMP(  69)-AMP(  71)+AMP(  96)
     &             +AMP(  98)-AMP( 101)-AMP( 103)+AMP( 105)-AMP( 119)
     &             -AMP( 121)-AMP( 124)-AMP( 126)+AMP( 127)-AMP( 129)
     &             +AMP( 131)+AMP( 134)+AMP( 135)-AMP( 136)+AMP( 137)
     &             -AMP( 139)+AMP( 140)-AMP( 142)+AMP( 143)+AMP( 148)
     &             -AMP( 150)-AMP( 157)+AMP( 159)
      JAMP(  23) = +AMP(  53)-AMP(  56)-AMP(  60)+AMP(  61)+AMP(  70)
     &             -AMP(  73)-AMP(  75)+AMP(  97)-AMP( 100)-AMP( 107)
     &             +AMP( 108)+AMP( 120)-AMP( 123)+AMP( 124)-AMP( 125)
     &             +AMP( 126)-AMP( 128)+AMP( 130)+AMP( 133)-AMP( 135)
     &             +AMP( 136)-AMP( 138)+AMP( 139)-AMP( 141)+AMP( 145)
     &             -AMP( 146)-AMP( 154)+AMP( 155)
      JAMP(  24) = +AMP(  55)+AMP(  56)-AMP(  58)+AMP(  59)-AMP(  61)
     &             -AMP(  72)+AMP(  73)+AMP(  99)+AMP( 100)+AMP( 101)
     &             -AMP( 102)+AMP( 103)-AMP( 104)-AMP( 106)+AMP( 107)
     &             -AMP( 122)+AMP( 123)+AMP( 132)-AMP( 133)-AMP( 134)
     &             -AMP( 140)+AMP( 141)+AMP( 151)-AMP( 153)+AMP( 154)
     &             -AMP( 155)+AMP( 157)-AMP( 159)
      GG_TTBGG = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          GG_TTBGG =GG_TTBGG+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END
