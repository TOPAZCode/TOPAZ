      SUBROUTINE ST_BDBUGG(P1,ANS)
C
C FUNCTION GENERATED BY MADGRAPH
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C
C FOR PROCESS : t -> b d~ u g g
C
C Crossing   1 is t b~ -> d~ u g g
      IMPLICIT NONE
C
C CONSTANTS
C
      INTEGER    NEXTERNAL,   NCOMB,     NCROSS
      PARAMETER (NEXTERNAL=6, NCOMB= 64, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C
C ARGUMENTS
C
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C
C LOCAL VARIABLES
C
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 T_BDBUGG
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL)
      LOGICAL GOODHEL(NCOMB,NCROSS)
      DATA GOODHEL/THEL*.FALSE./
      DATA NTRY/0/
      DATA (NHEL(IHEL,  1),IHEL=1,6) / -1, -1, -1, -1, -1, -1/
      DATA (NHEL(IHEL,  2),IHEL=1,6) / -1, -1, -1, -1, -1,  1/
      DATA (NHEL(IHEL,  3),IHEL=1,6) / -1, -1, -1, -1,  1, -1/
      DATA (NHEL(IHEL,  4),IHEL=1,6) / -1, -1, -1, -1,  1,  1/
      DATA (NHEL(IHEL,  5),IHEL=1,6) / -1, -1, -1,  1, -1, -1/
      DATA (NHEL(IHEL,  6),IHEL=1,6) / -1, -1, -1,  1, -1,  1/
      DATA (NHEL(IHEL,  7),IHEL=1,6) / -1, -1, -1,  1,  1, -1/
      DATA (NHEL(IHEL,  8),IHEL=1,6) / -1, -1, -1,  1,  1,  1/
      DATA (NHEL(IHEL,  9),IHEL=1,6) / -1, -1,  1, -1, -1, -1/
      DATA (NHEL(IHEL, 10),IHEL=1,6) / -1, -1,  1, -1, -1,  1/
      DATA (NHEL(IHEL, 11),IHEL=1,6) / -1, -1,  1, -1,  1, -1/
      DATA (NHEL(IHEL, 12),IHEL=1,6) / -1, -1,  1, -1,  1,  1/
      DATA (NHEL(IHEL, 13),IHEL=1,6) / -1, -1,  1,  1, -1, -1/
      DATA (NHEL(IHEL, 14),IHEL=1,6) / -1, -1,  1,  1, -1,  1/
      DATA (NHEL(IHEL, 15),IHEL=1,6) / -1, -1,  1,  1,  1, -1/
      DATA (NHEL(IHEL, 16),IHEL=1,6) / -1, -1,  1,  1,  1,  1/
      DATA (NHEL(IHEL, 17),IHEL=1,6) / -1,  1, -1, -1, -1, -1/
      DATA (NHEL(IHEL, 18),IHEL=1,6) / -1,  1, -1, -1, -1,  1/
      DATA (NHEL(IHEL, 19),IHEL=1,6) / -1,  1, -1, -1,  1, -1/
      DATA (NHEL(IHEL, 20),IHEL=1,6) / -1,  1, -1, -1,  1,  1/
      DATA (NHEL(IHEL, 21),IHEL=1,6) / -1,  1, -1,  1, -1, -1/
      DATA (NHEL(IHEL, 22),IHEL=1,6) / -1,  1, -1,  1, -1,  1/
      DATA (NHEL(IHEL, 23),IHEL=1,6) / -1,  1, -1,  1,  1, -1/
      DATA (NHEL(IHEL, 24),IHEL=1,6) / -1,  1, -1,  1,  1,  1/
      DATA (NHEL(IHEL, 25),IHEL=1,6) / -1,  1,  1, -1, -1, -1/
      DATA (NHEL(IHEL, 26),IHEL=1,6) / -1,  1,  1, -1, -1,  1/
      DATA (NHEL(IHEL, 27),IHEL=1,6) / -1,  1,  1, -1,  1, -1/
      DATA (NHEL(IHEL, 28),IHEL=1,6) / -1,  1,  1, -1,  1,  1/
      DATA (NHEL(IHEL, 29),IHEL=1,6) / -1,  1,  1,  1, -1, -1/
      DATA (NHEL(IHEL, 30),IHEL=1,6) / -1,  1,  1,  1, -1,  1/
      DATA (NHEL(IHEL, 31),IHEL=1,6) / -1,  1,  1,  1,  1, -1/
      DATA (NHEL(IHEL, 32),IHEL=1,6) / -1,  1,  1,  1,  1,  1/
      DATA (NHEL(IHEL, 33),IHEL=1,6) /  1, -1, -1, -1, -1, -1/
      DATA (NHEL(IHEL, 34),IHEL=1,6) /  1, -1, -1, -1, -1,  1/
      DATA (NHEL(IHEL, 35),IHEL=1,6) /  1, -1, -1, -1,  1, -1/
      DATA (NHEL(IHEL, 36),IHEL=1,6) /  1, -1, -1, -1,  1,  1/
      DATA (NHEL(IHEL, 37),IHEL=1,6) /  1, -1, -1,  1, -1, -1/
      DATA (NHEL(IHEL, 38),IHEL=1,6) /  1, -1, -1,  1, -1,  1/
      DATA (NHEL(IHEL, 39),IHEL=1,6) /  1, -1, -1,  1,  1, -1/
      DATA (NHEL(IHEL, 40),IHEL=1,6) /  1, -1, -1,  1,  1,  1/
      DATA (NHEL(IHEL, 41),IHEL=1,6) /  1, -1,  1, -1, -1, -1/
      DATA (NHEL(IHEL, 42),IHEL=1,6) /  1, -1,  1, -1, -1,  1/
      DATA (NHEL(IHEL, 43),IHEL=1,6) /  1, -1,  1, -1,  1, -1/
      DATA (NHEL(IHEL, 44),IHEL=1,6) /  1, -1,  1, -1,  1,  1/
      DATA (NHEL(IHEL, 45),IHEL=1,6) /  1, -1,  1,  1, -1, -1/
      DATA (NHEL(IHEL, 46),IHEL=1,6) /  1, -1,  1,  1, -1,  1/
      DATA (NHEL(IHEL, 47),IHEL=1,6) /  1, -1,  1,  1,  1, -1/
      DATA (NHEL(IHEL, 48),IHEL=1,6) /  1, -1,  1,  1,  1,  1/
      DATA (NHEL(IHEL, 49),IHEL=1,6) /  1,  1, -1, -1, -1, -1/
      DATA (NHEL(IHEL, 50),IHEL=1,6) /  1,  1, -1, -1, -1,  1/
      DATA (NHEL(IHEL, 51),IHEL=1,6) /  1,  1, -1, -1,  1, -1/
      DATA (NHEL(IHEL, 52),IHEL=1,6) /  1,  1, -1, -1,  1,  1/
      DATA (NHEL(IHEL, 53),IHEL=1,6) /  1,  1, -1,  1, -1, -1/
      DATA (NHEL(IHEL, 54),IHEL=1,6) /  1,  1, -1,  1, -1,  1/
      DATA (NHEL(IHEL, 55),IHEL=1,6) /  1,  1, -1,  1,  1, -1/
      DATA (NHEL(IHEL, 56),IHEL=1,6) /  1,  1, -1,  1,  1,  1/
      DATA (NHEL(IHEL, 57),IHEL=1,6) /  1,  1,  1, -1, -1, -1/
      DATA (NHEL(IHEL, 58),IHEL=1,6) /  1,  1,  1, -1, -1,  1/
      DATA (NHEL(IHEL, 59),IHEL=1,6) /  1,  1,  1, -1,  1, -1/
      DATA (NHEL(IHEL, 60),IHEL=1,6) /  1,  1,  1, -1,  1,  1/
      DATA (NHEL(IHEL, 61),IHEL=1,6) /  1,  1,  1,  1, -1, -1/
      DATA (NHEL(IHEL, 62),IHEL=1,6) /  1,  1,  1,  1, -1,  1/
      DATA (NHEL(IHEL, 63),IHEL=1,6) /  1,  1,  1,  1,  1, -1/
      DATA (NHEL(IHEL, 64),IHEL=1,6) /  1,  1,  1,  1,  1,  1/
      DATA (  IC(IHEL,  1),IHEL=1,6) /  1,  2,  3,  4,  5,  6/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  12/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
      ANS(IPROC) = 0D0
      DO IHEL=1,NCOMB
          IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
             T=T_BDBUGG(P ,NHEL(1,IHEL),JC(1))
             ANS(IPROC)=ANS(IPROC)+T
              IF (T .GT. 0D0 .AND. .NOT. GOODHEL(IHEL,IPROC)) THEN
                  GOODHEL(IHEL,IPROC)=.TRUE.
C             WRITE(*,*) IHEL,T
              ENDIF
          ENDIF
      ENDDO
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END


      REAL*8 FUNCTION T_BDBUGG(P,NHEL,IC)
C
C FUNCTION GENERATED BY MADGRAPH
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C
C FOR PROCESS : t -> b d~ u g g
C
      IMPLICIT NONE
C
C CONSTANTS
C
      INTEGER    NGRAPHS,    NEIGEN,    NEXTERNAL
      PARAMETER (NGRAPHS=  24,NEIGEN=  6,NEXTERNAL=6)
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=  31, NCOLOR=   6)
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C
C ARGUMENTS
C
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C
C LOCAL VARIABLES
C
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(6,NWAVEFUNCS)
C
C GLOBAL VARIABLES
C
      INCLUDE 'coupl.inc'
C
C COLOR DATA
C
      DATA Denom(1  )/            1/
      DATA (CF(i,1  ),i=1  ,6  ) /    16,   -2,    0,    0,    2,    2/
C               T[2,1,5,6]T[4,3]
      DATA Denom(2  )/            1/
      DATA (CF(i,2  ),i=1  ,6  ) /    -2,   16,    0,    0,    2,    2/
C               T[2,1,6,5]T[4,3]
      DATA Denom(3  )/            1/
      DATA (CF(i,3  ),i=1  ,6  ) /     0,    0,   16,    2,    0,    0/
C               T[2,1,5]T[4,3,6]
      DATA Denom(4  )/            1/
      DATA (CF(i,4  ),i=1  ,6  ) /     0,    0,    2,   16,    0,    0/
C               T[2,1,6]T[4,3,5]
      DATA Denom(5  )/            1/
      DATA (CF(i,5  ),i=1  ,6  ) /     2,    2,    0,    0,   16,   -2/
C               T[2,1]T[4,3,5,6]
      DATA Denom(6  )/            1/
      DATA (CF(i,6  ),i=1  ,6  ) /     2,    2,    0,    0,   -2,   16/
C               T[2,1]T[4,3,6,5]
C ----------
C BEGIN CODE
C ----------
      CALL IXXXXX(P(0,1   ),TMASS ,NHEL(1   ),+1*IC(1   ),W(1,1   ))
      CALL OXXXXX(P(0,2   ),BMASS ,NHEL(2   ),+1*IC(2   ),W(1,2   ))
      CALL IXXXXX(P(0,3   ),ZERO ,NHEL(3   ),-1*IC(3   ),W(1,3   ))
      CALL OXXXXX(P(0,4   ),ZERO ,NHEL(4   ),+1*IC(4   ),W(1,4   ))
      CALL VXXXXX(P(0,5   ),ZERO ,NHEL(5   ),+1*IC(5   ),W(1,5   ))
      CALL VXXXXX(P(0,6   ),ZERO ,NHEL(6   ),+1*IC(6   ),W(1,6   ))
      CALL JIOXXX(W(1,3   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,7   ))
      CALL FVIXXX(W(1,1   ),W(1,6   ),GG ,TMASS   ,TWIDTH  ,W(1,8   ))
      CALL FVOXXX(W(1,2   ),W(1,7   ),GWF ,TMASS   ,TWIDTH  ,W(1,9   ))
      CALL IOVXXX(W(1,8   ),W(1,9   ),W(1,5   ),GG ,AMP(1   ))
      CALL FVIXXX(W(1,1   ),W(1,5   ),GG ,TMASS   ,TWIDTH  ,W(1,10  ))
      CALL FVOXXX(W(1,2   ),W(1,6   ),GG ,BMASS   ,ZERO    ,W(1,11  ))
      CALL IOVXXX(W(1,10  ),W(1,11  ),W(1,7   ),GWF ,AMP(2   ))
      CALL FVIXXX(W(1,3   ),W(1,6   ),GG ,ZERO    ,ZERO    ,W(1,12  ))
      CALL JIOXXX(W(1,10  ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,13  ))
      CALL IOVXXX(W(1,12  ),W(1,4   ),W(1,13  ),GWF ,AMP(3   ))
      CALL FVOXXX(W(1,4   ),W(1,6   ),GG ,ZERO    ,ZERO    ,W(1,14  ))
      CALL IOVXXX(W(1,3   ),W(1,14  ),W(1,13  ),GWF ,AMP(4   ))
      CALL JVVXXX(W(1,6   ),W(1,5   ),G ,ZERO    ,ZERO    ,W(1,15  ))
      CALL IOVXXX(W(1,1   ),W(1,9   ),W(1,15  ),GG ,AMP(5   ))
      CALL FVIXXX(W(1,10  ),W(1,6   ),GG ,TMASS   ,TWIDTH  ,W(1,16  ))
      CALL IOVXXX(W(1,16  ),W(1,2   ),W(1,7   ),GWF ,AMP(6   ))
      CALL FVOXXX(W(1,2   ),W(1,5   ),GG ,BMASS   ,ZERO    ,W(1,17  ))
      CALL IOVXXX(W(1,8   ),W(1,17  ),W(1,7   ),GWF ,AMP(7   ))
      CALL FVIXXX(W(1,1   ),W(1,7   ),GWF ,BMASS   ,ZERO    ,W(1,18  ))
      CALL IOVXXX(W(1,18  ),W(1,11  ),W(1,5   ),GG ,AMP(8   ))
      CALL JIOXXX(W(1,1   ),W(1,17  ),GWF ,WMASS   ,WWIDTH  ,W(1,19  ))
      CALL IOVXXX(W(1,12  ),W(1,4   ),W(1,19  ),GWF ,AMP(9   ))
      CALL IOVXXX(W(1,3   ),W(1,14  ),W(1,19  ),GWF ,AMP(10  ))
      CALL IOVXXX(W(1,18  ),W(1,2   ),W(1,15  ),GG ,AMP(11  ))
      CALL FVOXXX(W(1,17  ),W(1,6   ),GG ,BMASS   ,ZERO    ,W(1,20  ))
      CALL IOVXXX(W(1,1   ),W(1,20  ),W(1,7   ),GWF ,AMP(12  ))
      CALL FVIXXX(W(1,3   ),W(1,5   ),GG ,ZERO    ,ZERO    ,W(1,21  ))
      CALL JIOXXX(W(1,8   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,22  ))
      CALL IOVXXX(W(1,21  ),W(1,4   ),W(1,22  ),GWF ,AMP(13  ))
      CALL JIOXXX(W(1,1   ),W(1,11  ),GWF ,WMASS   ,WWIDTH  ,W(1,23  ))
      CALL IOVXXX(W(1,21  ),W(1,4   ),W(1,23  ),GWF ,AMP(14  ))
      CALL JIOXXX(W(1,1   ),W(1,2   ),GWF ,WMASS   ,WWIDTH  ,W(1,24  ))
      CALL FVOXXX(W(1,4   ),W(1,24  ),GWF ,ZERO    ,ZERO    ,W(1,25  ))
      CALL FVOXXX(W(1,25  ),W(1,5   ),GG ,ZERO    ,ZERO    ,W(1,26  ))
      CALL IOVXXX(W(1,3   ),W(1,26  ),W(1,6   ),GG ,AMP(15  ))
      CALL IOVXXX(W(1,21  ),W(1,14  ),W(1,24  ),GWF ,AMP(16  ))
      CALL JIOXXX(W(1,3   ),W(1,25  ),GG ,ZERO    ,ZERO    ,W(1,27  ))
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,27  ),G ,AMP(17  ))
      CALL IOVXXX(W(1,21  ),W(1,25  ),W(1,6   ),GG ,AMP(18  ))
      CALL FVOXXX(W(1,4   ),W(1,5   ),GG ,ZERO    ,ZERO    ,W(1,28  ))
      CALL IOVXXX(W(1,3   ),W(1,28  ),W(1,22  ),GWF ,AMP(19  ))
      CALL IOVXXX(W(1,3   ),W(1,28  ),W(1,23  ),GWF ,AMP(20  ))
      CALL IOVXXX(W(1,12  ),W(1,28  ),W(1,24  ),GWF ,AMP(21  ))
      CALL FVIXXX(W(1,3   ),W(1,24  ),GWF ,ZERO    ,ZERO    ,W(1,29  ))
      CALL FVIXXX(W(1,29  ),W(1,5   ),GG ,ZERO    ,ZERO    ,W(1,30  ))
      CALL IOVXXX(W(1,30  ),W(1,4   ),W(1,6   ),GG ,AMP(22  ))
      CALL JIOXXX(W(1,29  ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,31  ))
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,31  ),G ,AMP(23  ))
      CALL IOVXXX(W(1,29  ),W(1,28  ),W(1,6   ),GG ,AMP(24  ))
      AMP( 1) = (0d0,0d0)!   MARKUS: removed gluon emission from top line
      AMP( 2) = (0d0,0d0)
      AMP( 3) = (0d0,0d0)
      AMP( 4) = (0d0,0d0)
      AMP( 5) = (0d0,0d0)
      AMP( 6) = (0d0,0d0)
      AMP( 7) = (0d0,0d0)
      AMP( 8) = (0d0,0d0)
      AMP( 9) = (0d0,0d0)
      AMP(10) = (0d0,0d0)
      AMP(11) = (0d0,0d0)
      AMP(12) = (0d0,0d0)
      AMP(13) = (0d0,0d0)
      AMP(14) = (0d0,0d0)
      AMP(19) = (0d0,0d0)
      AMP(20) = (0d0,0d0)
      JAMP(   1) = +AMP(   1)-AMP(   5)+AMP(   7)-AMP(  11)+AMP(  12)
      JAMP(   2) = +AMP(   2)+AMP(   5)+AMP(   6)+AMP(   8)+AMP(  11)
      JAMP(   3) = +AMP(   3)+AMP(   4)+AMP(   9)+AMP(  10)
      JAMP(   4) = +AMP(  13)+AMP(  14)+AMP(  19)+AMP(  20)
      JAMP(   5) = +AMP(  15)-AMP(  17)+AMP(  21)-AMP(  23)+AMP(  24)
      JAMP(   6) = +AMP(  16)+AMP(  17)+AMP(  18)+AMP(  22)+AMP(  23)
      T_BDBUGG = 0.D0
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          T_BDBUGG =T_BDBUGG+ZTEMP*DCONJG(JAMP(I))/DENOM(I)
      ENDDO
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN)
      END
